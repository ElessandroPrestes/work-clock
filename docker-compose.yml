services:
    app:
        container_name: ticto_app
        image: ticto_app_img
        build:
            context: ./
            dockerfile: docker/php/Dockerfile
            args:
                user: elessandro
                uid: 1000
        restart: unless-stopped
        ports:
            - 8000:8000
        working_dir: /var/www/
        volumes:
            - ./:/var/www
            - ./docker/php/php.ini:/usr/local/etc/php/php.ini
        depends_on:
            - redis
            - mysql
        networks:
            - api_network

    horizon:
        container_name: ticto_horizon
        image: ticto_app_img
        command: php artisan horizon
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
            - ./docker/php/php.ini:/usr/local/etc/php/php.ini
        depends_on:
            - redis
            - mysql
        networks:
            - api_network

    nginx:
        container_name: ticto_nginx
        image: nginx:1.25-alpine
        restart: unless-stopped
        ports:
            - 8081:80
        volumes:
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks:
            - api_network
        depends_on:
            - app

    mysql:
        container_name: ticto_mysql
        image: mysql:8.1
        restart: unless-stopped
        env_file:
            - .env
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DEFAULT_STORAGE_ENGINE: InnoDB
        volumes:
            - ./.docker/mysql_data:/var/lib/mysql
        ports:
            - 3306:3306
        networks:
            - api_network

    adminer:
        container_name: ticto_adminer
        image: adminer:4.8.1
        restart: unless-stopped
        ports:
            - 8080:8080
        depends_on:
            - mysql
        networks:
            - api_network

    redis:
        container_name: ticto_redis
        image: redis:7.2.4-alpine
        restart: unless-stopped
        networks:
            - api_network

networks:
    api_network:
        driver: bridge
